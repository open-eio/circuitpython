sudo: required
dist: trusty
language: c
compiler:
  - gcc
cache:
  directories:
    - "${HOME}/persist"

notifications:
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/c38b3bb3a3e131d955a1
    on_success: change  # options: [always|never|change] default: always
    on_failure: always  # options: [always|never|change] default: always
    on_start: never     # options: [always|never|change] default: always

before_script:
  - sudo add-apt-repository -y ppa:team-gcc-arm-embedded/ppa
  - sudo dpkg --add-architecture i386
  - sudo apt-get update -qq || true
  - sudo apt-get install -y python3 gcc-multilib pkg-config libffi-dev libffi-dev:i386 qemu-system gcc-mingw-w64
  - sudo apt-get install -y --force-yes gcc-arm-embedded
  # For teensy build
  - sudo apt-get install realpath
  # For coverage testing
  - sudo pip install cpp-coveralls
  - gcc --version
  - arm-none-eabi-gcc --version
  - python3 --version

script:
  # Build mpy-cross first because other builds depend on it.
  - make -C mpy-cross
  - make -C atmel-samd BOARD=arduino_zero
  - make -C atmel-samd BOARD=feather_m0_basic
  - make -C atmel-samd BOARD=feather_m0_flash
  - make -C atmel-samd BOARD=metro_m0_flash
  - make -C minimal CROSS=1 build/firmware.bin
  - ls -l minimal/build/firmware.bin
  - tools/check_code_size.sh
  - mkdir -p ${HOME}/persist
  # Save new firmware for reference, but only if building a main branch, not a pull request
  - 'if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then cp minimal/build/firmware.bin ${HOME}/persist/; fi'
  - make -C unix deplibs
  - make -C unix
  - make -C bare-arm
  - make -C qemu-arm test
  - make -C stmhal
  - make -C teensy
  - make -C cc3200 BTARGET=application BTYPE=release

  # run tests without coverage info
  #- (cd tests && MICROPY_CPYTHON3=python3.4 ./run-tests)
  #- (cd tests && MICROPY_CPYTHON3=python3.4 ./run-tests --emit native)

  # run tests with coverage info
  - make -C unix coverage
  - (cd tests && MICROPY_CPYTHON3=python3.4 MICROPY_MICROPYTHON=../unix/micropython_coverage ./run-tests)
  - (cd tests && MICROPY_CPYTHON3=python3.4 MICROPY_MICROPYTHON=../unix/micropython_coverage ./run-tests -d thread)
  - (cd tests && MICROPY_CPYTHON3=python3.4 MICROPY_MICROPYTHON=../unix/micropython_coverage ./run-tests --emit native)
  - (cd tests && MICROPY_CPYTHON3=python3.4 MICROPY_MICROPYTHON=../unix/micropython_coverage ./run-tests --via-mpy -d basics float)

after_success:
  - (cd unix && coveralls --root .. --build-root . --gcov $(which gcov) --gcov-options '\-o build-coverage/' --include py --include extmod)

after_failure:
  - (cd tests && for exp in *.exp; do testbase=$(basename $exp .exp); echo -e "\nFAILURE $testbase"; diff -u $testbase.exp $testbase.out; done)
  - (grep "FAIL" qemu-arm/build/console.out)
